package site;

import org.apache.commons.lang3.RandomStringUtils;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.support.ui.ExpectedConditions;
import pages.HomePage;
import pages.ProfileSettingsPage;
import pages.SettingsPage;
import pages.TrendingPage;
import utils.AutomatedWebTool;

public class CodePenTest {
    public AutomatedWebTool tool;

    @Before
    public void setup() {
        tool = new AutomatedWebTool();
        tool.openBrowser();
    }

    @Test
    public void testLoginLogout() {
        CodePen codePen = new CodePen(tool);
        TrendingPage trendingPage = codePen.login();

        Assert.assertEquals(trendingPage.getPageUrl(), tool.getCurrentUrl());

        HomePage homePage = codePen.logout();

        Assert.assertEquals(homePage.getPageUrl(), tool.getCurrentUrl());
    }

    @Test
    public void testUpdateProfile() {
        CodePen codePen = new CodePen(tool);
        TrendingPage trendingPage = codePen.login();

        Assert.assertEquals("User Menu", trendingPage.getUserMenuHoverTitle());

        SettingsPage settingsPage = trendingPage.openUserMenu().openSettings();
        ProfileSettingsPage profileSettingsPage = settingsPage.openProfile();

        String name = RandomStringUtils.random(10, true, false);
        String location = RandomStringUtils.random(10, true, false);
        String bio = RandomStringUtils.random(15, true, false);

        profileSettingsPage.updateProfile(name, location, bio, "https://twitter.com", "https://twitter.com", "https://twitter.com");

        tool.navigateBack();
        tool.getDriver().navigate().to(profileSettingsPage.getPageUrl());
        tool.getWait().until(ExpectedConditions.urlContains(profileSettingsPage.getPageUrl()));

        Assert.assertEquals(name, profileSettingsPage.getNameInput());
        System.out.println("mahir" + profileSettingsPage.getNameInput());
        Assert.assertEquals(location, profileSettingsPage.getLocationInput());
        Assert.assertEquals(bio, profileSettingsPage.getBioInput());
        Assert.assertEquals("https://twitter.com", profileSettingsPage.getUrl1Input());
        Assert.assertEquals("https://twitter.com", profileSettingsPage.getUrl2Input());
        Assert.assertEquals("https://twitter.com", profileSettingsPage.getUrl3Input());
    }

    @Test
    public void testMultiplePage() {
        CodePen codePen = new CodePen(tool);
        TrendingPage trendingPage = codePen.login();

        String[][] pages = {
                {"https://codepen.io/following", "Following"},
                {"https://codepen.io/trending", "Trending"},
                {"https://codepen.io/your-work/", "Your Work"},
                {"https://codepen.io/settings/profile", "Settings"}
        };

        for (String[] page : pages) {
            tool.getDriver().navigate().to(page[0]);
            tool.getWait().until(ExpectedConditions.titleContains(page[1]));

            Assert.assertEquals(tool.getPageTitle(), page[1] + " - CodePen");
        }
    }

    @After
    public void close() {
        tool.closeBrowser();
    }
}
